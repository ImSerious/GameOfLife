<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgYNHgYGDXgGBg29BgYN7QYG
        Df8GBg3/BgYN/wYGDf8GBg3nBgYNtAYGDWYGBg0YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgYNMwYGDcAGBg3/BgYN/wYG
        Df8GBg3/BgYN/wYGDf8GBg3/BgYN/wYGDf8GBg3/BgYN/wYGDf8GBg2rBgYNJAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgYNEgYGDaUGBg3/BgYN/xAQ
        Fv8kJCn/QkJE/1VVVf9bW1v/W1tb/1tbW/9bW1v/U1NT/zw8P/8iIif/DQ0T/wYGDf8GBg35BgYNkAYG
        DQYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYGDSQGBg3bBgYN/wsL
        Ev8rKy//Wlpa/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9TU1T/JiYq/wYG
        Df8GBg3/BgYNxgYGDRgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGBg02BgYN8AYG
        Df8dHSL/UVFS/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/SkpL/xYWHP8GBg3/BgYN4QYGDSEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgYNGwYG
        DecGBg3/JCQp/1hYWf9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/VFRV/x8fJP8GBg3/BgYN0gYGDQkAAAAAAAAAAAAAAAAAAAAAAAAAAAYG
        DQYGBg3MBgYN/yEhJv9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/V1dY/xoaH/8GBg3/BgYNrgAAAAAAAAAAAAAAAAAA
        AAAAAAAABgYNfgYGDf8YGB7/VVVW/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/T09Q/w4OFP8GBg3/BgYNSwAA
        AAAAAAAAAAAAAAYGDRUGBg32BgYN/0RERv9bW1v/W1tb/1tbW/++vr7/vr6+/76+vv++vr7/vr6+/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/MzM2/wYG
        Df8GBg3SBgYNAwAAAAAAAAAABgYNgQYGDf8hISb/W1tb/1tbW/9bW1v/W1tb/76+vv++vr7/vr6+/76+
        vv++vr7/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/Ghof/wYGDf8GBg1dAAAAAAAAAAAGBg3hBgYN/0VFR/9bW1v/W1tb/1tbW/9bW1v/vr6+/76+
        vv++vr7/vr6+/76+vv9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/85OTz/BgYN/wYGDb0AAAAABgYNLQYGDf8VFRv/W1tb/1tbW/9bW1v/W1tb/1tb
        W/++vr7/vr6+/76+vv++vr7/vr6+/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1lZWf8GBg3/BgYN/AYGDQkGBg1sBgYN/ykpLf9bW1v/W1tb/1tb
        W/9bW1v/W1tb/76+vv++vr7/vr6+/76+vv++vr7/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/x0dIv8GBg3/BgYNRQYGDZMGBg3/Nzc6/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/Kiou/wYGDf8GBg1sBgYNqwYG
        Df8/P0H/W1tb/1tbW/9bW1v/W1tb/1tbW/++vr7/vr6+/76+vv++vr7/vr6+/1tbW/++vr7/vr6+/76+
        vv++vr7/vr6+/1tbW/++vr7/vr6+/76+vv++vr7/vr6+/1tbW/9bW1v/W1tb/1tbW/8yMjX/BgYN/wYG
        DYQGBg20BgYN/0JCRP9bW1v/W1tb/1tbW/9bW1v/W1tb/76+vv++vr7/vr6+/76+vv++vr7/W1tb/76+
        vv++vr7/vr6+/76+vv++vr7/W1tb/76+vv++vr7/vr6+/76+vv++vr7/W1tb/1tbW/9bW1v/W1tb/zQ0
        N/8GBg3/BgYNigYGDasGBg3/Pz9B/1tbW/9bW1v/W1tb/1tbW/9bW1v/vr6+/76+vv++vr7/vr6+/76+
        vv9bW1v/vr6+/76+vv++vr7/vr6+/76+vv9bW1v/vr6+/76+vv++vr7/vr6+/76+vv9bW1v/W1tb/1tb
        W/9bW1v/MjI1/wYGDf8GBg2EBgYNkwYGDf83Nzr/W1tb/1tbW/9bW1v/W1tb/1tbW/++vr7/vr6+/76+
        vv++vr7/vr6+/1tbW/++vr7/vr6+/76+vv++vr7/vr6+/1tbW/++vr7/vr6+/76+vv++vr7/vr6+/1tb
        W/9bW1v/W1tb/1tbW/8qKi7/BgYN/wYGDWwGBg1sBgYN/ykpLf9bW1v/W1tb/1tbW/9bW1v/W1tb/76+
        vv++vr7/vr6+/76+vv++vr7/W1tb/76+vv++vr7/vr6+/76+vv++vr7/W1tb/76+vv++vr7/vr6+/76+
        vv++vr7/W1tb/1tbW/9bW1v/W1tb/x0dIv8GBg3/BgYNRQYGDS0GBg3/FRUb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9ZWVn/BgYN/wYGDfwGBg0JAAAAAAYGDeEGBg3/RUVH/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/++vr7/vr6+/76+vv++vr7/vr6+/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/zk5PP8GBg3/BgYNvQAAAAAAAAAABgYNgQYG
        Df8hISb/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/76+vv++vr7/vr6+/76+
        vv++vr7/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/Ghof/wYGDf8GBg1dAAAAAAAA
        AAAGBg0VBgYN8wYGDf9DQ0X/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/vr6+/76+
        vv++vr7/vr6+/76+vv9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/zMzNv8GBg3/BgYN0gYG
        DQMAAAAAAAAAAAAAAAAGBg17BgYN/xgYHv9VVVb/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/++vr7/vr6+/76+vv++vr7/vr6+/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9PT1D/Dg4U/wYG
        Df8GBg1LAAAAAAAAAAAAAAAAAAAAAAYGDQYGBg3MBgYN/yEhJv9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/76+vv++vr7/vr6+/76+vv++vr7/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/VlZX/xoa
        H/8GBg3/BgYNrgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYGDRsGBg3nBgYN/yMjKP9YWFn/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1NT
        VP8fHyT/BgYN/wYGDdIGBg0JAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYGDTYGBg3tBgYN/x0d
        Iv9QUFH/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9ISEr/FBQa/wYGDf8GBg3hBgYNHgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYG
        DSQGBg3bBgYN/woKEf8qKi7/WVlZ/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9RUVL/JiYq/wYGDf8GBg3/BgYNwAYGDRUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAYGDQ8GBg2iBgYN/wYGDf8QEBb/JCQp/0BAQv9TU1P/W1tb/1tbW/9bW1v/W1tb/1FR
        Uv87Oz7/ISEm/wsLEv8GBg3/BgYN+QYGDYoGBg0GAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGBg0wBgYNvQYGDf8GBg3/BgYN/wYGDf8GBg3/EBAW/w4O
        FP8GBg3/BgYN/wYGDf8GBg3/BgYN/wYGDaUGBg0kAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgYNHgYGDXIGBg26BgYN5wYG
        Df8GBg3/BgYN/wYGDf8GBg3hBgYNtAYGDWMGBg0VAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAYGDR4GBg0YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//AP//+AAf/+AAB//AAAP/gAAB/wAAAP4AAAB+AAAAfAAAADgAAAA4AA
        AAGAAAABgAAAAQAAAAEAAAAAAAAAAAAAAAAAAAABgAAAAYAAAAGAAAABgAAAA8AAAAPgAAAH4AAAB/AA
        AA/4AAAf/AAAP/4AAH//gAH///AP//////8=
</value>
  </data>
</root>